name: ci

on:
  push:
    branches:
      - main
    paths-ignore:
      - README.md
      - README_CN.md
  pull_request:
    paths-ignore:
      - README.md
      - README_CN.md

jobs:
  build-web:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Node
      uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: 'npm'
    - name: Install dependencies
      run: npm install
    - name: Build
      env:
        ONEDRIVE_AUTH: ${{ secrets.ONEDRIVE_AUTH }}
        ONEDRIVE_GME: ${{ secrets.ONEDRIVE_GME }}
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        REDIRECT_URI: ${{ secrets.REDIRECT_URI }}
      run: npm run build
    - name: Upload artifact
      id: deployment
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - build-web
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - build-web
      - deploy
    env:
      KEYSTORE: ${{ secrets.KEYSTORE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get version
        id: yq
        uses: mikefarah/yq@master
        with:
          cmd: yq -r '.version' package.json
      - name: Print version
        run: echo ${{ steps.yq.outputs.result }}
      - name: Prepare tag name
        id: tag_name
        run: |
          VERSION="${{ steps.yq.outputs.result }}"
          TAG_NAME="v${VERSION}"
          echo "TAG_NAME=$TAG_NAME" >> "$GITHUB_OUTPUT"
      - name: Check tag
        uses: mukunku/tag-exists-action@v1.6.0
        id: check-tag
        with:
          tag: ${{ steps.tag_name.outputs.TAG_NAME }}
      - name: Eextract log
        if: steps.check-tag.outputs.exists == 'false'
        run: python extract_log.py ${{ steps.tag_name.outputs.TAG_NAME }}
      - name: Download android artifact
        if: steps.check-tag.outputs.exists == 'false' && env.KEYSTORE != ''
        uses: actions/download-artifact@v4
        with:
          name: OMP-android
          path: artifacts
      - name: Release
        if: steps.check-tag.outputs.exists == 'false' && env.KEYSTORE != ''
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_name.outputs.TAG_NAME }}
          body_path: CHANGELOG_${{ steps.tag_name.outputs.TAG_NAME }}.md
          draft: false
          prerelease: false
          files: |
            artifacts/OMP-android.apk